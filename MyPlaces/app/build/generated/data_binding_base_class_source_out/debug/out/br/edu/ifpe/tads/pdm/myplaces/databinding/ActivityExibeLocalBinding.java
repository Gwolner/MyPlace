// Generated by view binder compiler. Do not edit!
package br.edu.ifpe.tads.pdm.myplaces.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import br.edu.ifpe.tads.pdm.myplaces.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExibeLocalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ViewFlipper VFFotos;

  @NonNull
  public final LinearLayout exibeLocal;

  @NonNull
  public final RatingBar ratingBarAvaliacao;

  @NonNull
  public final EditText textViewCategoria;

  @NonNull
  public final EditText textViewCidade;

  @NonNull
  public final EditText textViewEstado;

  @NonNull
  public final EditText textViewNomeLocal;

  @NonNull
  public final EditText textViewObservacao;

  private ActivityExibeLocalBinding(@NonNull LinearLayout rootView, @NonNull ViewFlipper VFFotos,
      @NonNull LinearLayout exibeLocal, @NonNull RatingBar ratingBarAvaliacao,
      @NonNull EditText textViewCategoria, @NonNull EditText textViewCidade,
      @NonNull EditText textViewEstado, @NonNull EditText textViewNomeLocal,
      @NonNull EditText textViewObservacao) {
    this.rootView = rootView;
    this.VFFotos = VFFotos;
    this.exibeLocal = exibeLocal;
    this.ratingBarAvaliacao = ratingBarAvaliacao;
    this.textViewCategoria = textViewCategoria;
    this.textViewCidade = textViewCidade;
    this.textViewEstado = textViewEstado;
    this.textViewNomeLocal = textViewNomeLocal;
    this.textViewObservacao = textViewObservacao;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExibeLocalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExibeLocalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exibe_local, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExibeLocalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.VFFotos;
      ViewFlipper VFFotos = rootView.findViewById(id);
      if (VFFotos == null) {
        break missingId;
      }

      LinearLayout exibeLocal = (LinearLayout) rootView;

      id = R.id.ratingBarAvaliacao;
      RatingBar ratingBarAvaliacao = rootView.findViewById(id);
      if (ratingBarAvaliacao == null) {
        break missingId;
      }

      id = R.id.textViewCategoria;
      EditText textViewCategoria = rootView.findViewById(id);
      if (textViewCategoria == null) {
        break missingId;
      }

      id = R.id.textViewCidade;
      EditText textViewCidade = rootView.findViewById(id);
      if (textViewCidade == null) {
        break missingId;
      }

      id = R.id.textViewEstado;
      EditText textViewEstado = rootView.findViewById(id);
      if (textViewEstado == null) {
        break missingId;
      }

      id = R.id.textViewNomeLocal;
      EditText textViewNomeLocal = rootView.findViewById(id);
      if (textViewNomeLocal == null) {
        break missingId;
      }

      id = R.id.textViewObservacao;
      EditText textViewObservacao = rootView.findViewById(id);
      if (textViewObservacao == null) {
        break missingId;
      }

      return new ActivityExibeLocalBinding((LinearLayout) rootView, VFFotos, exibeLocal,
          ratingBarAvaliacao, textViewCategoria, textViewCidade, textViewEstado, textViewNomeLocal,
          textViewObservacao);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
